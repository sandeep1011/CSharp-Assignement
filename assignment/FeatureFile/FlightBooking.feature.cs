// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace assignment.FeatureFile
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Search for a Multi-City flight")]
    public partial class SearchForAMulti_CityFlightFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "FlightBooking.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Search for a Multi-City flight", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Book Flight Ticket")]
        [NUnit.Framework.TestCaseAttribute("MLA", "LON", "ROM", "04/11/2020", "04/14/2020", "04/20/2020", "4", null)]
        public virtual void BookFlightTicket(string first, string second, string third, string date1, string date2, string date3, string number, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Book Flight Ticket", null, exampleTags);
#line 4
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
           testRunner.Given("I am on expedia home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
           testRunner.And("I click on the flight section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
           testRunner.When("I select multi-city", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
           testRunner.Then("click on add another flight", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 9
           testRunner.Then(string.Format("Search for flights between different airports {0},{1},{2} on dates {3},{4},{5}  f" +
                        "or {6}  adults", first, second, third, date1, date2, date3, number), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 10
           testRunner.Then("click on Search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 11
           testRunner.And("Select the flight which comes at first place", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
           testRunner.And("Compare the price with the total amount", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

